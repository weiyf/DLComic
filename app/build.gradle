apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'android-apt'

def appName = "DL漫客"

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "cn.weiyf.dlcomic"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    dataBinding {
        enabled true
    }

    signingConfigs {
        release {
            def filePrivateProperties = file('private.properties')
            if (filePrivateProperties.exists()) {
                println "$appName _release: using weiyf's key"
                Properties propsPrivate = new Properties()
                propsPrivate.load(new FileInputStream(filePrivateProperties))
                storeFile file(propsPrivate['storeFile'])
                storePassword propsPrivate['storePassword']
                keyAlias propsPrivate['keyAlias']
                keyPassword propsPrivate['keyPassword']
            } else {
                println $appName "_release: using default' s key "
            }
        }
        debug {
            def filePrivateProperties = file('private.properties')
            if (filePrivateProperties.exists()) {
                println "$appName _debug: using debug's key"
                Properties propsPrivate = new Properties()
                propsPrivate.load(new FileInputStream(filePrivateProperties))
                storeFile file(propsPrivate['debugStoreFile'])
                storePassword propsPrivate['storePassword']
                keyAlias propsPrivate['keyAlias']
                keyPassword propsPrivate['keyPassword']
            } else {
                println $appName "_debug: using default' s key "
            }
        }
    }

    buildTypes {
        release {
            debuggable false
            minifyEnabled true
            shrinkResources true
            pseudoLocalesEnabled true
            signingConfig signingConfigs.release
            resValue 'string', 'app_name', "$appName"
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationVariants.all { variant ->
                variant.productFlavors.each { flavor ->
                    variant.outputs.each { output ->
                        def outputFile = output.outputFile
                        if (outputFile != null && outputFile.name.equals('app-' + flavor.name + '-release.apk')) {
                            def fileName = "$appName-${flavor.name}-release-${defaultConfig.versionName}.apk"
                            output.outputFile = new File(outputFile.parent, fileName)
                        }
                    }
                }
            }
        }
        debug {
            debuggable true
            pseudoLocalesEnabled true
//            applicationIdSuffix '.debug'
            versionNameSuffix '.debug'
            resValue 'string', 'app_name', "$appName-debug"
            signingConfig signingConfigs.debug
            applicationVariants.all { variant ->
                variant.productFlavors.each { flavor ->
                    variant.outputs.each { output ->
                        def outputFile = output.outputFile
                        if (outputFile != null && outputFile.name.equals('app-' + flavor.name + '-debug.apk')) {
                            def fileName = "$appName-${flavor.name}-debug-${defaultConfig.versionName}.apk"
                            output.outputFile = new File(outputFile.parent, fileName)
                        }
                    }
                }
            }
        }
    }
    lintOptions {
        disable 'InvalidPackage'
        abortOnError false
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    productFlavors {
        defaultFlavors {
        }
    }


    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }

    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.1'
    }
}
dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
    compile 'cn.weiyf.lib:DLFrame:1.0.02'
    compile 'com.roughike:bottom-bar:2.1.1'
    compile 'com.android.support:cardview-v7:25.2.0'
    compile 'com.youth.banner:banner:1.4.9'
    compile 'jp.wasabeef:glide-transformations:2.0.1'
    compile 'me.gujun.android.taggroup:library:1.4@aar'
    compile 'com.jaeger.statusbaruitl:library:1.3.5'
}
